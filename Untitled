
# 

#' HapMap data of Sheep Genotyping
#' HapMap file containing the genotypes of 160 Sheeps
#' @format Data in HapMap format
#' @source Aboul-Naga, A.M., Alsamman, A.M., El Allali, A., Elshafie, M.H., Abdelal, E.S., Abdelkhalek, T.M., Abdelsabour, T.H., Mohamed, L.G. and Hamwieh, A., 2022. Genome-wide analysis identified candidate variants and genes associated with heat stress adaptation in Egyptian sheep breeds. Frontiers in Genetics, 13, p.898522.
#' @examples
#' data(sheep_genotypes_hapmap)
"sheep_genotypes_hapmap"

#' Binary data of Sheep Genotyping
#' Binary file containing the genotypes of 160 Sheeps
#' @format Data in Binary format
#' @source Aboul-Naga, A.M., Alsamman, A.M., El Allali, A., Elshafie, M.H., Abdelal, E.S., Abdelkhalek, T.M., Abdelsabour, T.H., Mohamed, L.G. and Hamwieh, A., 2022. Genome-wide analysis identified candidate variants and genes associated with heat stress adaptation in Egyptian sheep breeds. Frontiers in Genetics, 13, p.898522.
#' @examples
#' data(sheep_genotypes_binary)
"sheep_genotypes_binary"

############

# # Data read and save as R object
# CaExpressionCounts<-read.table("data/Count.tsv",header=TRUE,sep="\t",row.names=1)
# CaExpressionCounts<-as.matrix(CaExpressionCounts)
# # save as R object
# save(CaExpressionCounts,file="data/CaExpressionCounts.RData")
# # Metadata read and save as R object
# CaExpressionMetadata<-read.table("data/Meta.tsv",header=TRUE,sep="\t")
# # save as R object
# save(CaExpressionMetadata,file="data/CaExpressionMetadata.RData")

###########

CaGenomeAnnotation <- read.table("data/CaGenomeAnnotation.tsv",  sep = "\t")
colnames(CaGenomeAnnotation)<-c("geneid","chr","start","end","strand")
# "data/string.csv"
string_db<-read.csv("data/string.csv", sep = ",", header = TRUE)
# merge the two dataframes by geneid
CaGenomeAnnotation <- merge(CaGenomeAnnotation, string_db, by = "geneid")

# save the CaGenomeAnnotation as RData
save(CaGenomeAnnotation, file = "data/CaGenomeAnnotation.RData")
######################
#"data/protein.enrichment.tsv"

#CaProteinEnrichment <- read.csv("data/protein.enrichment.tsv", sep = "\t", header = TRUE)

# abbreviate the categories
#CaProteinEnrichment[CaProteinEnrichment$category == "Biological Process (Gene Ontology)", "category"] <- "GO:BP"
#CaProteinEnrichment[CaProteinEnrichment$category == "Cellular Component (Gene Ontology)", "category"] <- "GO:CC"
#CaProteinEnrichment[CaProteinEnrichment$category == "Local Network Cluster (STRING)", "category"] <- "STRING"
#CaProteinEnrichment[CaProteinEnrichment$category == "Protein Domains (SMART)", "category"] <- "SMART"
#CaProteinEnrichment[CaProteinEnrichment$category == "Protein Domains and Features (InterPro)", "category"] <- "InterPro"
#CaProteinEnrichment[CaProteinEnrichment$category == "Subcellular localization (COMPARTMENTS)", "category"] <- "COMPARTMENTS"
#CaProteinEnrichment[CaProteinEnrichment$category == "Molecular Function (Gene Ontology)", "category"] <- "GO:MF"
#CaProteinEnrichment[CaProteinEnrichment$category == "Protein Domains (Pfam)", "category"] <- "Pfam"
#CaProteinEnrichment[CaProteinEnrichment$category == "Annotated Keywords (UniProt)", "category"] <- "UniProt"
#CaProteinEnrichment[CaProteinEnrichment$category == "Reactome Pathways", "category"] <- "Reactome"
#X.string_protein_id category       term                                       description
#colnames(CaProteinEnrichment) <- c("proteinid","category","termid","term")



# head(CaExpressionCounts)
# head(CaExpressionMetadata)
# get_study_data()
# get_report(get_study_data())
#nrow(CaGenomeAnnotation)

# head(CaExpressionCounts)
# head(CaExpressionMetadata)
# head(CaGenomeAnnotation)
# head(CaProteinEnrichment)
# nrow(CaProteinEnrichment)
# length(unique(CaProteinEnrichment$proteinid))

save(CaProteinEnrichment, file = "data/CaProteinEnrichment.RData")






#read
"~/Documents/MyGitHub/ChickpeaR_related/normalizing/Count/Gene_Normalized.csv"
CaExpressionCounts<-read.table("~/Documents/MyGitHub/ChickpeaR_related/normalizing/Count/Gene_Normalized.csv",header=TRUE,sep=",",row.names=1)
#save the data as RData
save(CaExpressionCounts,file="data/CaExpressionCounts.RData")
getwd()

